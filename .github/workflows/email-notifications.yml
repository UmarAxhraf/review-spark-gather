name: Email Notifications

on:
  workflow_dispatch: # üëà this enables the manual Run button
  schedule:
    - cron: "0 9 * * *" # Daily at 9 AM UTC
    - cron: "0 10 * * 1" # Weekly on Monday at 10 AM UTC
    - cron: "0 11 * * 2" # Download reminders on Tuesday at 11 AM UTC

jobs:
  send-notifications:
    runs-on: ubuntu-latest

    steps:
      - name: Send Daily Notifications
        if: github.event.schedule == '0 9 * * *' || github.event_name == 'workflow_dispatch'
        run: |
          echo "üïí Current UTC time: $(date -u)"
          echo "üöÄ Triggering Daily Notifications..."
          echo "üìç Supabase URL: ${{ secrets.SUPABASE_URL }}"
          echo "üîë Service Role Key (first 10 chars): ${SUPABASE_SERVICE_ROLE_KEY:0:10}..."
          
          # Test connectivity first
          echo "üîó Testing connectivity to Supabase..."
          curl -I "${{ secrets.SUPABASE_URL }}/functions/v1/send-daily-notifications" || echo "‚ùå Connection test failed"
          
          # Make the actual request with verbose output
          RESPONSE=$(curl -v -s -o response.json -w "%{http_code}" -X POST \
            "${{ secrets.SUPABASE_URL }}/functions/v1/send-daily-notifications" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json" \
            -H "User-Agent: GitHub-Actions" \
            -d '{}')

          echo "üì© Supabase responded with HTTP status: $RESPONSE"
          echo "üîç Response body:"
          cat response.json
          echo ""
          
          # Check if response file exists and has content
          if [ ! -f response.json ]; then
            echo "‚ùå No response file created - request may have failed completely"
            exit 1
          fi
          
          if [ -z "$(cat response.json)" ]; then
            echo "‚ùå Empty response - possible network or authentication issue"
            exit 1
          fi

          if [ "$RESPONSE" -ge 400 ]; then
            echo "‚ùå Failed to trigger Daily Notifications."
            exit 1
          fi
          
          echo "‚úÖ Daily notifications triggered successfully!"
        env:
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

      - name: Send Weekly Reports
        if: github.event.schedule == '0 10 * * 1' || github.event_name == 'workflow_dispatch'
        run: |
          echo "üïí Current UTC time: $(date -u)"
          echo "üìä Triggering Weekly Reports..."
          
          RESPONSE=$(curl -v -s -o response.json -w "%{http_code}" -X POST \
            "${{ secrets.SUPABASE_URL }}/functions/v1/send-weekly-reports" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json" \
            -H "User-Agent: GitHub-Actions" \
            -d '{}')

          echo "üì© Supabase responded with HTTP status: $RESPONSE"
          echo "üîç Response body:"
          cat response.json

          if [ "$RESPONSE" -ge 400 ]; then
            echo "‚ùå Failed to trigger Weekly Reports."
            exit 1
          fi
          
          echo "‚úÖ Weekly reports triggered successfully!"
        env:
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

      - name: Send Download Reminders
        if: github.event.schedule == '0 11 * * 2' || github.event_name == 'workflow_dispatch'
        run: |
          echo "üïí Current UTC time: $(date -u)"
          echo "üì• Triggering Download Reminders..."
          
          RESPONSE=$(curl -v -s -o response.json -w "%{http_code}" -X POST \
            "${{ secrets.SUPABASE_URL }}/functions/v1/send-download-reminders" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json" \
            -H "User-Agent: GitHub-Actions" \
            -d '{}')

          echo "üì© Supabase responded with HTTP status: $RESPONSE"
          echo "üîç Response body:"
          cat response.json

          if [ "$RESPONSE" -ge 400 ]; then
            echo "‚ùå Failed to trigger Download Reminders."
            exit 1
          fi
          
          echo "‚úÖ Download reminders triggered successfully!"
        env:
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
